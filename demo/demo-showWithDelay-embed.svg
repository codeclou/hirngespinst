<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet href="https://fonts.googleapis.com/css?family=Roboto+Mono:400,700|Source+Sans+Pro:400,600" type="text/css"?>
<svg width="751px" height="529px" viewBox="0 0 751 529" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <style>
    /* <![CDATA[ */
        /*!
         * @license MIT
         * Copyright (c) 2017 Bernhard Grünewaldt https://github.com/codeclou/hirngespinst
         */@keyframes a{0%{opacity:0}to{opacity:1}}g[id^=frame-]{opacity:0}.showFrameAnimation{opacity:0;animation-name:a;animation-iteration-count:1;animation-direction:alternate;animation-timing-function:ease-out;animation-fill-mode:forwards}
    /* ]]> */
    </style>
    <!-- Generator: Sketch 42 (36781) - http://www.bohemiancoding.com/sketch -->
    <title>animation</title>
    <desc>Created with Sketch.</desc>
    <g id="Page-2" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
        <g id="frame-02" transform="translate(365.000000, 310.000000)">
            <path d="M9.5,0.5 L9.5,109.5" id="Line" stroke="#BC00B9" stroke-width="3" stroke-linecap="square"></path>
            <polygon id="Triangle" fill="#BC00B9" transform="translate(9.000000, 105.000000) scale(1, -1) translate(-9.000000, -105.000000) " points="9 96 18 114 0 114"></polygon>
            <circle id="Oval" fill="#BC00B9" cx="37" cy="30" r="14"></circle>
            <text id="2" font-family="SourceSansPro-Bold, Source Sans Pro" font-size="16" font-weight="bold" fill="#FFFFFF">
                <tspan x="33.276" y="34">2</tspan>
            </text>
            <text id="Server-Side-HTTP-Req" font-family="SourceSansPro-Regular, Source Sans Pro" font-size="16" font-weight="normal" fill="#BC00B9">
                <tspan x="24" y="66">Server-Side HTTP Request to </tspan>
                <tspan x="24" y="86" font-size="12">https://api.github.com/….</tspan>
            </text>
        </g>
        <g id="frame-01" transform="translate(364.000000, 113.000000)">
            <path d="M9.5,0.5 L9.5,109.5" id="Line" stroke="#BC00B9" stroke-width="3" stroke-linecap="square"></path>
            <polygon id="Triangle" fill="#BC00B9" transform="translate(9.000000, 105.000000) scale(1, -1) translate(-9.000000, -105.000000) " points="9 96 18 114 0 114"></polygon>
            <circle id="Oval" fill="#BC00B9" cx="37" cy="30" r="14"></circle>
            <text id="1" font-family="SourceSansPro-Bold, Source Sans Pro" font-size="16" font-weight="bold" fill="#FFFFFF">
                <tspan x="33.276" y="34">1</tspan>
            </text>
            <text id="Browser-redirect-to" font-family="SourceSansPro-Regular, Source Sans Pro" font-size="16" font-weight="normal" fill="#BC00B9">
                <tspan x="24" y="66">Browser redirect to </tspan>
                <tspan x="24" y="86" font-size="12">https://auth-server.seevee.io/github-login/prod-to-frontend-prod</tspan>
            </text>
        </g>
        <g id="static" transform="translate(41.000000, 39.000000)">
            <rect id="Rectangle" fill="#555555" x="0" y="197" width="163" height="61"></rect>
            <text id="seevee-pdf-converter" font-family="SourceSansPro-Regular, Source Sans Pro" font-size="16" font-weight="normal" fill="#FFFFFF">
                <tspan x="10.06" y="231">seevee-pdf-converter</tspan>
            </text>
            <rect id="Rectangle" fill="#555555" x="253" y="197" width="163" height="61"></rect>
            <text id="seevee-auth-server" font-family="SourceSansPro-Regular, Source Sans Pro" font-size="16" font-weight="normal" fill="#FFFFFF">
                <tspan x="270.484" y="231">seevee-auth-server</tspan>
            </text>
            <rect id="Rectangle" fill="#555555" x="253" y="0" width="163" height="61"></rect>
            <text id="seevee-frontend" font-family="SourceSansPro-Regular, Source Sans Pro" font-size="16" font-weight="normal" fill="#FFFFFF">
                <tspan x="280.24" y="34">seevee-frontend</tspan>
            </text>
            <rect id="Rectangle" fill="#555555" x="499" y="197" width="163" height="61"></rect>
            <text id="seevee-backend" font-family="SourceSansPro-Regular, Source Sans Pro" font-size="16" font-weight="normal" fill="#FFFFFF">
                <tspan x="526.124" y="231">seevee-backend</tspan>
            </text>
            <rect id="Rectangle" fill="#555555" x="253" y="394" width="163" height="61"></rect>
            <text id="GitHub-API" font-family="SourceSansPro-Regular, Source Sans Pro" font-size="16" font-weight="normal" fill="#FFFFFF">
                <tspan x="298.204" y="428">GitHub API</tspan>
            </text>
        </g>
        <rect id="hg-loading" fill="#BC00B9" x="0" y="512" width="1%" height="10"></rect>
    </g>
    <script type="text/javascript">
      /* <![CDATA[ */
            /*!
             * @license MIT
             * Copyright (c) 2017 Bernhard Grünewaldt https://github.com/codeclou/hirngespinst
             */

            //
            // DEFS
            //
            const frameAnimationDelayInSeconds = 1;
            const frameAnimationDurationInSeconds = 2;
            const framePauseBetweenFramesInSeconds = 2;


            //
            // CALCULATE OVERALL ANIMATION DURATION
            // ====================================
            //
            // based on SVG-Elements with 'frame-n' id like 'frame-01, frame-02 ... frame-99'
            //
            const getElementsStartsWithId = function(id) {
                var children = document.getElementsByTagName('*');
                var elements = [], child;
                for (var i = 0, length = children.length; i < length; i++) {
                    child = children[i];
                    if (child.id.substr(0, id.length) == id)
                        elements.push(child);
                }
                return elements;
            };
            const getFrameIdByNumber = function(number) {
                if (number < 10) {
                    return 'frame-0' + number;
                }
                return 'frame-' + number;
            };
            //
            // CALCULATE AMOUNT OF FRAMES
            //
            const frames = getElementsStartsWithId('frame-');
            var amountFrames = 0;
            if (frames !== undefined && frames !== null && frames.length > 0) {
                amountFrames = frames.length;
            }
            //
            // CALCULATE OVERALL ANIMATION DURATION
            //
            var overallAnimationDurationInSeconds =
                (
                    frameAnimationDelayInSeconds +
                    frameAnimationDurationInSeconds +
                    framePauseBetweenFramesInSeconds
                ) * amountFrames;


            //
            // SHOW AND HIDE FRAME LOGIC
            //
            const initializeFrameAnimations = function() {
                console.log('   initializeFrameAnimations()');
                for (var i = 1; i < amountFrames + 1; i++) {
                    var framePauseBetweenFramesInSecondsLoop = framePauseBetweenFramesInSeconds;
                    if (i === 1) {
                        framePauseBetweenFramesInSecondsLoop = 0;
                    }
                    const frame = document.getElementById(getFrameIdByNumber(i));
                    frame.removeAttribute('class');
                    frame.removeAttribute('style');
                    const delay = ((framePauseBetweenFramesInSecondsLoop + frameAnimationDelayInSeconds) * i);
                    // We need a timeout since the SVG DOM does not seem to get updated otherwise
                    setTimeout(function(frame, delay, frameAnimationDurationInSeconds){
                        frame.style["animation-delay"] =  delay + 's';
                        frame.style["animation-duration"] = frameAnimationDurationInSeconds + 's';
                        frame.style["opacity"] = 0;
                        frame.setAttribute('class', 'showFrameAnimation');
                    }, 300, frame, delay, frameAnimationDurationInSeconds);
                }
            };


            //
            // LOADING BAR LOGIC
            // =================
            //
            // NOTE: Since CSS does not apply to `width` elements of RECT SVG-elements we need
            //       to write the animation ourselves in JS. (At least in Firefox the CSS approach
            //       does not work at the time of writing this code).
            //
            var loadingBarUpdateCount = 0;
            var loadingBarIntervalReference = null;
            const initializeLoadingBarAnimation = function() {
                console.log('   initializeLoadingBarAnimation()');
                const loadingBar = document.getElementById('hg-loading');
                if (loadingBar !== null) {
                    loadingBarUpdateCount = 0;
                    loadingBar.setAttribute('width', '0%');
                    if (loadingBarIntervalReference !== undefined && loadingBarIntervalReference !== null) {
                        clearInterval(loadingBarIntervalReference);
                        loadingBarIntervalReference = null;
                    }
                    const updateLoadingBar = function () {
                        if (loadingBarUpdateCount <= overallAnimationDurationInSeconds) {
                            loadingBarUpdateCount = loadingBarUpdateCount + 1;
                            const percentage = loadingBarUpdateCount / overallAnimationDurationInSeconds * 100;
                            loadingBar.setAttribute('width', percentage + '%');
                        }
                    };
                    // updateLoadingBar every second
                    loadingBarIntervalReference = setInterval(updateLoadingBar, 1000);
                }
            };


            //
            // INIT
            //
            console.log('HIRNGESPINST started with overallAnimationDurationInSeconds', overallAnimationDurationInSeconds);
            const init = function() {
                console.log('init()');
                initializeFrameAnimations();
                initializeLoadingBarAnimation();
            };
            init();
            setInterval(init, overallAnimationDurationInSeconds * 1000);
      /* ]]> */
    </script>
</svg>
